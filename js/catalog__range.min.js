"use strict";var slider=document.getElementById("slider"),marginMin=document.getElementById("slider-value-min"),marginMax=document.getElementById("slider-value-max"),inputs=[marginMin,marginMax];noUiSlider.create(slider,{start:[2e3,15e4],connect:!0,range:{min:0,"10%":2e3,"50%":1e5,max:2e5},format:{to:function(e){return parseInt(e)+""},from:function(e){return parseInt(Number(e.replace("","")))}}}),slider.noUiSlider.on("update",(function(e,n){inputs[n].value=e[n]})),inputs.forEach((function(e,n){e.addEventListener("change",(function(){slider.noUiSlider.setHandle(n,this.value)})),e.addEventListener("keydown",(function(e){var i,r=slider.noUiSlider.get(),t=Number(r[n]),l=slider.noUiSlider.steps()[n];switch(e.which){case 13:slider.noUiSlider.setHandle(n,this.value);break;case 38:!1===(i=l[1])&&(i=1),null!==i&&slider.noUiSlider.setHandle(n,t+i);break;case 40:!1===(i=l[0])&&(i=1),null!==i&&slider.noUiSlider.setHandle(n,t-i)}}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGFsb2dfX3JhbmdlLmpzIl0sIm5hbWVzIjpbInNsaWRlciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJtYXJnaW5NaW4iLCJtYXJnaW5NYXgiLCJpbnB1dHMiLCJub1VpU2xpZGVyIiwiY3JlYXRlIiwic3RhcnQiLCJjb25uZWN0IiwicmFuZ2UiLCJtaW4iLCJtYXgiLCJmb3JtYXQiLCJ0byIsInZhbHVlIiwicGFyc2VJbnQiLCJmcm9tIiwiTnVtYmVyIiwicmVwbGFjZSIsIm9uIiwidmFsdWVzIiwiaGFuZGxlIiwiZm9yRWFjaCIsImlucHV0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInNldEhhbmRsZSIsInRoaXMiLCJlIiwicG9zaXRpb24iLCJnZXQiLCJzdGVwIiwic3RlcHMiLCJ3aGljaCJdLCJtYXBwaW5ncyI6IkFBQUEsYUFBQSxJQUFJQSxPQUFTQyxTQUFTQyxlQUFlLFVBQ2pDQyxVQUFZRixTQUFTQyxlQUFlLG9CQUNwQ0UsVUFBWUgsU0FBU0MsZUFBZSxvQkFDcENHLE9BQVMsQ0FBQ0YsVUFBV0MsV0FHekJFLFdBQVdDLE9BQU9QLE9BQVEsQ0FDdEJRLE1BQU8sQ0FBQyxJQUFNLE1BQ2RDLFNBQVMsRUFFVEMsTUFBTyxDQUNIQyxJQUFPLEVBQ1AsTUFBTyxJQUNQLE1BQU8sSUFDUEMsSUFBTyxLQUVYQyxPQUFRLENBRUpDLEdBQUksU0FBU0MsR0FDVCxPQUFPQyxTQUFTRCxHQUFTLElBSTdCRSxLQUFNLFNBQVNGLEdBQ1gsT0FBT0MsU0FBU0UsT0FBT0gsRUFBTUksUUFBUSxHQUFJLFVBS3JEbkIsT0FBT00sV0FBV2MsR0FBRyxVQUFVLFNBQVNDLEVBQVFDLEdBQzVDakIsT0FBT2lCLEdBQVFQLE1BQVFNLEVBQU9DLE1BSWxDakIsT0FBT2tCLFNBQVEsU0FBU0MsRUFBT0YsR0FFM0JFLEVBQU1DLGlCQUFpQixVQUFVLFdBQzdCekIsT0FBT00sV0FBV29CLFVBQVVKLEVBQVFLLEtBQUtaLFVBRzdDUyxFQUFNQyxpQkFBaUIsV0FBVyxTQUFTRyxHQUV2QyxJQVNJQyxFQVRBUixFQUFTckIsT0FBT00sV0FBV3dCLE1BQzNCZixFQUFRRyxPQUFPRyxFQUFPQyxJQU10QlMsRUFIUS9CLE9BQU9NLFdBQVcwQixRQUdiVixHQU9qQixPQUFRTSxFQUFFSyxPQUVOLEtBQUssR0FDRGpDLE9BQU9NLFdBQVdvQixVQUFVSixFQUFRSyxLQUFLWixPQUN6QyxNQUVKLEtBQUssSUFNZ0IsS0FIakJjLEVBQVdFLEVBQUssTUFJWkYsRUFBVyxHQUlFLE9BQWJBLEdBQ0E3QixPQUFPTSxXQUFXb0IsVUFBVUosRUFBUVAsRUFBUWMsR0FHaEQsTUFFSixLQUFLLElBSWdCLEtBRmpCQSxFQUFXRSxFQUFLLE1BR1pGLEVBQVcsR0FHRSxPQUFiQSxHQUNBN0IsT0FBT00sV0FBV29CLFVBQVVKLEVBQVFQLEVBQVFjIiwiZmlsZSI6ImNhdGFsb2dfX3JhbmdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNsaWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzbGlkZXInKTtcbnZhciBtYXJnaW5NaW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2xpZGVyLXZhbHVlLW1pbicpLFxuICAgIG1hcmdpbk1heCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzbGlkZXItdmFsdWUtbWF4Jyk7XG52YXIgaW5wdXRzID0gW21hcmdpbk1pbiwgbWFyZ2luTWF4XTtcblxuXG5ub1VpU2xpZGVyLmNyZWF0ZShzbGlkZXIsIHtcbiAgICBzdGFydDogWzIwMDAsIDE1MDAwMF0sXG4gICAgY29ubmVjdDogdHJ1ZSxcbiAgICAvLyB0b29sdGlwczogW3RydWUsIHdOdW1iKHsgZGVjaW1hbHM6IDEgfSldLFxuICAgIHJhbmdlOiB7XG4gICAgICAgICdtaW4nOiAwLFxuICAgICAgICAnMTAlJzogMjAwMCxcbiAgICAgICAgJzUwJSc6IDEwMDAwMCxcbiAgICAgICAgJ21heCc6IDIwMDAwMFxuICAgIH0sXG4gICAgZm9ybWF0OiB7XG4gICAgICAgIC8vICd0bycgdGhlIGZvcm1hdHRlZCB2YWx1ZS4gUmVjZWl2ZXMgYSBudW1iZXIuXG4gICAgICAgIHRvOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KHZhbHVlKSArICcnO1xuICAgICAgICB9LFxuICAgICAgICAvLyAnZnJvbScgdGhlIGZvcm1hdHRlZCB2YWx1ZS5cbiAgICAgICAgLy8gUmVjZWl2ZXMgYSBzdHJpbmcsIHNob3VsZCByZXR1cm4gYSBudW1iZXIuXG4gICAgICAgIGZyb206IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoTnVtYmVyKHZhbHVlLnJlcGxhY2UoJycsICcnKSkpO1xuICAgICAgICB9LFxuICAgIH1cbn0pO1xuXG5zbGlkZXIubm9VaVNsaWRlci5vbigndXBkYXRlJywgZnVuY3Rpb24odmFsdWVzLCBoYW5kbGUpIHtcbiAgICBpbnB1dHNbaGFuZGxlXS52YWx1ZSA9IHZhbHVlc1toYW5kbGVdO1xufSk7XG5cblxuaW5wdXRzLmZvckVhY2goZnVuY3Rpb24oaW5wdXQsIGhhbmRsZSkge1xuXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHNsaWRlci5ub1VpU2xpZGVyLnNldEhhbmRsZShoYW5kbGUsIHRoaXMudmFsdWUpO1xuICAgIH0pO1xuXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcblxuICAgICAgICB2YXIgdmFsdWVzID0gc2xpZGVyLm5vVWlTbGlkZXIuZ2V0KCk7XG4gICAgICAgIHZhciB2YWx1ZSA9IE51bWJlcih2YWx1ZXNbaGFuZGxlXSk7XG5cbiAgICAgICAgLy8gW1toYW5kbGUwX2Rvd24sIGhhbmRsZTBfdXBdLCBbaGFuZGxlMV9kb3duLCBoYW5kbGUxX3VwXV1cbiAgICAgICAgdmFyIHN0ZXBzID0gc2xpZGVyLm5vVWlTbGlkZXIuc3RlcHMoKTtcblxuICAgICAgICAvLyBbZG93biwgdXBdXG4gICAgICAgIHZhciBzdGVwID0gc3RlcHNbaGFuZGxlXTtcblxuICAgICAgICB2YXIgcG9zaXRpb247XG5cbiAgICAgICAgLy8gMTMgaXMgZW50ZXIsXG4gICAgICAgIC8vIDM4IGlzIGtleSB1cCxcbiAgICAgICAgLy8gNDAgaXMga2V5IGRvd24uXG4gICAgICAgIHN3aXRjaCAoZS53aGljaCkge1xuXG4gICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgIHNsaWRlci5ub1VpU2xpZGVyLnNldEhhbmRsZShoYW5kbGUsIHRoaXMudmFsdWUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM4OlxuXG4gICAgICAgICAgICAgICAgLy8gR2V0IHN0ZXAgdG8gZ28gaW5jcmVhc2Ugc2xpZGVyIHZhbHVlICh1cClcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IHN0ZXBbMV07XG5cbiAgICAgICAgICAgICAgICAvLyBmYWxzZSA9IG5vIHN0ZXAgaXMgc2V0XG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IDE7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gbnVsbCA9IGVkZ2Ugb2Ygc2xpZGVyXG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlci5ub1VpU2xpZGVyLnNldEhhbmRsZShoYW5kbGUsIHZhbHVlICsgcG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQwOlxuXG4gICAgICAgICAgICAgICAgcG9zaXRpb24gPSBzdGVwWzBdO1xuXG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IDE7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlci5ub1VpU2xpZGVyLnNldEhhbmRsZShoYW5kbGUsIHZhbHVlIC0gcG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfSk7XG59KTsiXX0=
